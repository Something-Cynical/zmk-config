/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
	flavor = "tap-preferred";
};

/ {
	combos{
		compatible = "zmk,combos";
		combo_btfn {
			timeout-ms = <50>;
			key-positions = <0 12>;
			bindings = <&mo 3>;
			layers = <2>;
		};
	};

	macros {
		sepa: separator {
			compatible = "zmk,behavior-macro"; 
			#binding-cells = <0>; 
			bindings = <&macro_tap &kp COMMA &kp SPACE>;
		};
	};

	behaviors {
		bspc_del: backspace_delete {
			compatible = "zmk,behavior-mod-morph";
			#binding-cells = <0>;
			bindings = <&kp BACKSPACE>, <&kp DELETE>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
		spent: space_enter {
			compatible = "zmk,behavior-mod-morph";
			#binding-cells = <0>;
			bindings = <&kp SPACE>, <&kp RET>;
			mods = <(MOD_RSFT)>;
		};
		entsp: enter_space {
			compatible = "zmk,behavior-mod-morph";
			#binding-cells = <0>;
			bindings = <&kp RET>, <&kp SPACE>;
			mods = <(MOD_LSFT)>;
		};
		td00: tap_dance_00 {
			compatible = "zmk,behavior-tap-dance";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp LPAR>, <&kp LBKT>;
		};
		td01: tap_dance_01 {
			compatible = "zmk,behavior-tap-dance";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp RPAR>, <&kp RBKT>;
		};
		td02: tap_dance_02 {
			compatible = "zmk,behavior-tap-dance";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp FSLH>, <&kp BSLH>;
		};
		td03: tap_dance_03 {
			compatible = "zmk,behavior-tap-dance";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp UNDER>, <&kp EQUAL>;
		};
		td04: tap_dance_04 {
			compatible = "zmk,behavior-tap-dance";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp AMPS>, <&kp PIPE>;
		};
		td05: tap_dance_05 {
			compatible = "zmk,behavior-tap-dance";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp STAR>, <&kp CARET>;
		};
		td06: tap_dance_06 {
			compatible = "zmk,behavior-tap-dance";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp DLLR>, <&kp PRCNT>;
		};
		td07: tap_dance_07 {
			compatible = "zmk,behavior-tap-dance";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp LT>, <&kp GT>;
		};
		td08: tap_dance_08 {
			compatible = "zmk,behavior-tap-dance";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp KP_MINUS>, <&kp KP_DIVIDE>;
		};
		td09: tap_dance_09 {
			compatible = "zmk,behavior-tap-dance";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp KP_PLUS>, <&kp KP_MULTIPLY>;
		};
		td10: tap_dance_10 {
			compatible = "zmk,behavior-tap-dance";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp HASH>, <&kp EXCL>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		default_layer {
			bindings = <
		&kp TAB		&kp Q		&kp W		&kp E		&kp R		&kp T			&kp Y	&kp U		&kp I		&kp O		&kp P			&bspc_del
		&mo 2		&mt LGUI A	&mt LALT S	&mt LSFT D	&mt LCTL F	&kp G			&kp H	&mt RCTL J	&mt RSFT K	&mt RALT L	&mt RGUI SEMI	&kp SQT
		&kp LSHFT	&kp Z		&kp X		&kp C		&kp V		&kp B			&kp N	&kp M		&kp COMMA	&kp DOT		&td02			&kp ESC
											&mo 2		&mo 1		&entsp			&spent	&mo 2		&mo 1
			>;
		};

		lower_layer {
			bindings = <
		&kp GRAVE	&td10		&td06		&td05		&td07		&sepa			&td08		&kp KP_N7	&kp KP_N8	&kp KP_N9	&none	&trans
		&trans		&kp AT		&td00		&td03		&td01		&td04			&td09		&kp KP_N4	&kp KP_N5	&kp KP_N6	&none	&trans
		&trans		&kp EQUAL	&kp PLUS	&kp MINUS	&kp STAR	&kp FSLH		&kp KP_N0	&kp KP_N1	&kp KP_N2	&kp KP_N3	&none	&trans
											&trans		&trans		&trans			&trans		&trans		&trans
			>;
		};

		raise_layer {
			bindings = <
		&kp ESC		&kp N1		&kp N2		&kp N3	&kp N4		&kp N5		&kp N6		&kp N7		&kp N8		&kp N9		&kp N0		&trans
		&trans		&kp LEFT	&kp DOWN	&kp UP	&kp RIGHT	&trans		&trans		&kp LEFT	&kp UP		&kp DOWN	&kp RIGHT	&trans
		&trans		&trans		&trans		&trans	&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans
											&trans	&trans		&trans		&trans		&trans		&trans
			>;
		};

		adjust_layer {
			bindings = <
		&trans	&trans	&kp F1	&kp F4	&kp F7	&kp F10		&bt BT_PRV		&bt BT_NXT		&trans			&trans			&trans			&soft_off
		&trans	&trans	&kp F2	&kp F5	&kp F8	&kp F11		&trans			&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&trans
		&trans	&trans	&kp F3	&kp F6	&kp F9	&kp F12		&bt BT_SEL 2	&bt BT_SEL 3	&trans			&trans			&trans			&trans
								&trans	&trans	&trans		&trans			&trans			&trans
			>;
		};
	};
};