/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
		macros {
			sepa: separator {
				compatible = "zmk,behavior-macro";
				#binding-cells = <0>;
				bindings = <&macro-tap &kp COMMA &kp SPACE>;
			};
		};
		behaviors {
			td00: tap_dance_00 {
				compatible = "zmk,behavior-tap-dance";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp LPAR>, <&kp LBKT>, <&kp LBRC>;
			};
			td01: tap_dance_01 {
				compatible = "zmk,behavior-tap-dance";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp RPAR>, <&kp RBKT>, <&kp RBRC>;
			};
			td02: tap_dance_02 {
				compatible = "zmk,behavior-tap-dance";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp FSLH>, <&kp BSLH>;
			};
			td03: tap_dance_03 {
				compatible = "zmk,behavior-tap-dance";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp BSPC>, <&kp DEL>;
			};
			td04: tap_dance_04 {
				compatible = "zmk,behavior-tap-dance";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp UNDER>, <&kp EQUAL>;
			};
			td05: tap_dance_05 {
				compatible = "zmk,behavior-tap-dance";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp AMPS>, <&kp PIPE>;
			};
			td06: tap_dance_06 {
				compatible = "zmk,behavior-tap-dance";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp STAR>, <&kp CARET>;
			};
			td07: tap_dance_07 {
				compatible = "zmk,behavior-tap-dance";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp DLLR>, <&kp PRCNT>;
			};
			td08: tap_dance_08 {
				compatible = "zmk,behavior-tap-dance";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp LT>, <&kp GT>;
			};
			td09: tap_dance_09 {
				compatible = "zmk,behavior-tap-dance";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp KP_MINUS>, <&kp KP_DIVIDE>;
			};
			td10: tap_dance_10 {
				compatible = "zmk,behavior-tap-dance";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp KP_PLUS>, <&kp KP_MULTIPLY>;
			};
		};

	keymap {
		compatible = "zmk,keymap";
		default_layer {
			bindings = <
		&kp TAB			&kp Q		&kp W		&kp E		&kp R		&kp T				&kp Y			&kp U		&kp I		&kp O		&kp P		&td03
		&kp LCTRL		&kp A		&kp S		&kp D		&mt LCTL F	&mt LALT G			&mt RALT H		&mt RCTL J	&kp K		&kp L		&kp SEMI	&lt 1 SQT
		&kp LSHFT		&kp Z		&kp X		&kp C		&kp V		&kp B				&kp N			&kp M		&kp COMMA	&kp DOT		&td02		&kp ESC
												&kp LGUI	&mo 1		&mt LSHFT RET		&mt RSHFT SPACE	&mo 2		&kp RALT
			>;
		};

		lower_layer {
			bindings = <
		&kp GRAVE	&kp HASH		&td05		&td07		&td08	&sepa			&kp N1		&kp N2		&kp N3		&kp N4		&kp N5		&trans
		&trans		&kp AT			&td00		&td04		&td01	&kp EXCL		&kp LEFT	&kp DOWN	&kp UP		&kp RIGHT	&trans		&trans
		&mo 2		&kp EQUAL		&kp PLUS	&kp MINUS	&td06	&kp FSLH		&trans		&trans		&trans		&trans		&trans		&trans
												&kp LGUI	&trans	&trans			&trans		&trans		&trans
			>;
		};

		raise_layer {
			bindings = <
		&kp ESC		&trans		&trans		&trans		&trans		&trans				&td09			&KP_N7		&KP_8		&KP_9		&none		&trans
		&trans		&trans		&kp LEFT	&kp UP		&kp DOWN	&kp RIGHT			&td10			&KP_N4		&KP_5		&KP_6		&none		&trans
		&trans		&trans		&trans		&trans		&trans		&trans				&KP_N0			&KP_N1		&KP_2		&KP_3		&none		&trans
											&kp LGUI	&trans		&mt LSHFT SPACE		&mt RSHFT RET	&trans		&trans
			>;
		};
	};
};
